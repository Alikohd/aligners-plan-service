services:
  minio:
    image: quay.io/minio/minio:RELEASE.2024-11-07T00-52-20Z.hotfix.2e4a5c31f
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "ROOTNAME"
      MINIO_ROOT_PASSWORD: "ROOTPASS"
    volumes:
      - ~/data/orthodontist:/data
    command: server /data --console-address ":9001"

  treatment-plan-orchestrator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: treatment-orchestrator
    env_file:
      - .env-docker
    ports:
      - "8080:8080"
    depends_on:
      - minio
      - pacs
      - db
      - segmentation
      - result-planning
      - treatment-planning

  pacs:
    image: orthancteam/orthanc:24.3.3
    container_name: pacs
    ports:
      - "4242:4242"
      - "8042:8042"
    volumes:
      - /opt/orthanc/storage:/var/lib/orthanc/db
    restart: unless-stopped
    environment:
      ORTHANC_JSON: |
        {
          "AuthenticationEnabled": false
        }

  db:
    container_name: "db"
    env_file:
      - .env-docker
    image: "postgres:17.3-alpine3.21"
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - '5433:5432'
    volumes:
      - aligners_control_service:/var/lib/postgresql/data

  segmentation:
    build:
      context: ../MockServices/SegmentationMockService
      dockerfile: Dockerfile
    container_name: segmentationservice
    ports:
      - "9091:9091"

  result-planning:
    build:
      context: ../MockServices/ResultPlanningMockService
      dockerfile: Dockerfile
    container_name: result_planningservice
    ports:
      - "9092:9092"

  treatment-planning:
    build:
      context: ../MockServices/TreatmentPlanningMockService
      dockerfile: Dockerfile
    container_name: treatment_planningservice
    ports:
      - "9093:9093"

secrets:
  orthanc.json:
    file: orthanc.json

volumes:
  aligners_control_service: